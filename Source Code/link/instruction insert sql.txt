USE POO;
Go

llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll

CREATE PROCEDURE InsereCompteClient
    @NumeroCompte INT,
    @Nom VARCHAR(50),
    @Prenom VARCHAR(50),
    @Points INT,
    @Mail VARCHAR(50),
    @Telephone VARCHAR(12),
    @DateNaissance DATE,
    @IDHistorique INT,
    @IDFacture INT,
    @IDADresse INT
AS
BEGIN
    BEGIN TRY
        -- Vérifier les conditions avant l'insertion
        IF LEN(@Nom) > 50 OR LEN(@Prenom) > 50 OR LEN(@Mail) > 50
        BEGIN
            -- Si les informations sont incorrectes, lancer une erreur
            RAISERROR('Les informations fournies sont incorrectes.', 16, 1);
        END

        INSERT INTO COMPTE_CLIENT (COMCLI_NUMERO_COMPTE, COMCLI_NOM, COMCLI_PRENOM, COMCLI_POINT, COMCLI_MAIL, COMCLI_TELEPHONE, COMCLI_DATE_NAISSANCE, HIS_ID_HISTORIQUE, FAC_ID_FACTURE, ADR_ID_ADRESSE)
        VALUES (@NumeroCompte, @Nom, @Prenom, @Points, @Mail, @Telephone, @DateNaissance, @IDHistorique, @IDFacture, @IDADresse);

    END TRY
    BEGIN CATCH
        ROLLBACK;
    END CATCH;
END;



llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll


CREATE PROCEDURE InsereAdresse
    @AdresseString VARCHAR(50),
    @DepartementString VARCHAR(50)
AS
BEGIN
    BEGIN TRY
        DECLARE @IDAdresse SMALLINT;

        -- Vérifier les conditions avant l'insertion
        IF LEN(@AdresseString) > 50 OR LEN(@DepartementString) > 50
        BEGIN
            -- Si les informations sont incorrectes, lancer une erreur
            RAISERROR('Les informations fournies sont incorrectes.', 16, 1);
        END

        INSERT INTO ADRESSE(ADR_ADRESSE, ADR_DEPARTEMENT)
        VALUES (@AdresseString, @DepartementString);

        -- Récupérer l'ID de la nouvelle adresse insérée
        SET @IDAdresse = SCOPE_IDENTITY();

    END TRY
    BEGIN CATCH
        ROLLBACK;
    END CATCH;
END;



llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll



CREATE PROCEDURE InsereFacture
    @DateFacturation DATE,
    @DateLivraison DATE,
    @DateCommande DATE,
    @MoyenPaiement VARCHAR(50),
    @PrixOriginal MONEY,
    @Remise INT,
    @Marge INT,
    @TVA INT,
    @PrixTTC MONEY,
    @IDAdresse INT
AS
BEGIN
    BEGIN TRY
        -- Vérifier les conditions avant l'insertion
        IF @DateFacturation IS NULL OR @MoyenPaiement IS NULL OR @PrixOriginal IS NULL OR @PrixTTC IS NULL OR @IDAdresse IS NULL
        BEGIN
            -- Si les informations sont incorrectes, lancer une erreur
            RAISERROR('Les informations fournies sont incorrectes.', 16, 1);
        END

        INSERT INTO FACTURE (FAC_DATE_FACTURATION, FAC_DATE_LIVRAISON, FAC_DATE_COMMADE, FAC_MOYENT_PAIMENT, FAC_PRIX_ORIGINAL, FAC_REMISE, FAC_MARGE, FAC_TVA, FAC_PRIC_TTC, ADR_ID_ADRESSE)
        VALUES (@DateFacturation, @DateLivraison, @DateCommande, @MoyenPaiement, @PrixOriginal, @Remise, @Marge, @TVA, @PrixTTC, @IDAdresse);

    END TRY
    BEGIN CATCH
        ROLLBACK;
    END CATCH;
END;




llllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll



CREATE PROCEDURE InsereCommande
    @IDFacture INT,
    @IDAchat INT
AS
BEGIN
    BEGIN TRY
        -- Vérifier les conditions avant l'insertion
        IF @IDFacture IS NULL OR @IDAchat IS NULL
        BEGIN
            -- Si les informations sont incorrectes, lancer une erreur
            RAISERROR('Les informations fournies sont incorrectes.', 16, 1);
        END

        INSERT INTO COMMANDE (FAC_ID_FACTURE, ACH_ID_ACHAT)
        VALUES (@IDFacture, @IDAchat);

    END TRY
    BEGIN CATCH
        ROLLBACK;
    END CATCH;
END;


CREATE PROCEDURE InserePersonnel
    @Nom VARCHAR(50),
    @Prenom VARCHAR(50),
    @Telephone VARCHAR(12),
    @DateEmbauche DATE,
    @IDSuperieur INT,
    @IDADresse INT
AS
BEGIN
    BEGIN TRY
        -- Vérifier les conditions avant l'insertion
        IF LEN(@Nom) > 50 OR LEN(@Prenom) > 50
        BEGIN
            -- Si les informations sont incorrectes, lancer une erreur
            RAISERROR('Les informations fournies sont incorrectes.', 16, 1);
        END

        INSERT INTO PERSONNEL (PER_NOM, PER_PRENOM, PER_TELEPHONE, PER_DATE_EMBAUCHE, PER_ID_SUPERIEUR, ADR_ID_ADRESSE)
        VALUES (@Nom, @Prenom, @Telephone, @DateEmbauche, @IDSuperieur, @IDADresse);

    END TRY
    BEGIN CATCH
        ROLLBACK;
    END CATCH;
END;